
Chapter 2: Getting Started with C++

2.0: Setting up a development environment

Installing the necessary software and tools for writing, testing, and debugging code is a component of setting up a development environment. 
The following are the vital steps for constructing a development environment:

1. Install a  integrated development environment (IDE) (Visual Studio 2022 for example)
2. Install any necessary libraries or dependencies: Some projects require additional libraries or dependencies to be installed in order to function correctly.

2.1: Writing, compiling, and executing a C++ program

1. Writing the code:
#include <iostream>

int main() {
    std::cout << "Hello, world!" << std::endl;
    std::cin.ignore();
}

2. Compiling the code
To compile the code, just press CTRL+B if you are on Visual Studio 2019/2022.

3. Executing the code:

To run the compiled executable file, just go to x64/Release or Debug and run the executable application.


The program will output a Text saying Hello World.

Note: Keep in mind that this is just an example, and the specifics of writing, compiling, and trying to run a C++ program will vary depending on your operating system and the tools you utilise. 
However, regardless of the environment, the basic steps should remain the same.

2.2: Basic syntax, including variables, data types, and operators
A programming language's syntax refers to the rules and practices that define how code should be produced. 
Variables, data types, and operators all are a part of the fundamental grammar of C++.

Variables: Variables are used in softwares to store data. To declare a variable in C++, specify its type, name, and, optionally, initial value. Â Example:

int age = 30;
double pi = 3.14;
char letter = 'a';

Data types describe the kinds of information that a variable can hold. 
C++ offers a variety of built-in data types, including integer (int), floating-point (double), and character (char) (char).

Operators: These are instruments that are employed to perform operations on variables and values. 
Arithmetic operators (such as +, -, *, /), comparison operators (such as ==,!=,, >, =, >=), and logical operators (such as &&, ||,!) are also all available in C++. 
As just an example:

int x = 5;
int y = 2;
int z = x + y; // z is 7
bool result = (x > y) && (x != z); // result is false